#!/bin/csh
#

# Generated by CHARMM-GUI (http://www.charmm-gui.org) v3.7
#
# The following shell script assumes your NAMD executable is namd2 and that
# the NAMD inputs are located in the current directory.
#
# Only one processor is used below. To parallelize NAMD, use this scheme:
#     charmrun namd2 +p4 input_file.inp > output_file.out
# where the "4" in "+p4" is replaced with the actual number of processors you
# intend to use.
set equi_prefix = step4_equilibration
set prod_prefix = step5_production
set prod_step   = step5

# Running equilibration steps
/content/NAMD_3.0alpha13_Linux-x86_64-multicore-CUDA/namd3 ${equi_prefix}.inp > ${equi_prefix}.out

# Running GaMD prerun for collecting parameters
set GaMD_prerun1 = step4.1_GaMD_init
set GaMD_prerun2 = step4.2_GaMD_upda

sed "s/${prod_prefix}/${GaMD_prerun1}/;s/#MDprep/100000/;s/#MDparm/400000/;s/#UPprep/0/; \
    s/#UPparm/0/;s/accelMDGRestart on/accelMDGRestart off/; \
    s/accelMDGRestartFile #Pstep.restart.gamd//" ${prod_prefix}.inp > ${GaMD_prerun1}.inp
/content/NAMD_3.0alpha13_Linux-x86_64-multicore-CUDA/namd3 ${GaMD_prerun1}.inp > ${GaMD_prerun1}.out

sed "s/${prod_prefix}/${GaMD_prerun2}/;s/#MDprep/0/;s/#MDparm/0/;s/#UPprep/100000/; \
    s/#UPparm/400000/;s/#Pstep/${GaMD_prerun1}/" ${prod_prefix}.inp > ${GaMD_prerun2}.inp
/content/NAMD_3.0alpha13_Linux-x86_64-multicore-CUDA/namd3 ${GaMD_prerun2}.inp > ${GaMD_prerun2}.out

sed "s/${prod_prefix}/step5_GaMD_production/;s/#MDprep/0/;s/#MDparm/0/; \
    s/#UPprep/0/;s/#UPparm/0/" ${prod_prefix}.inp > step5_GaMD_production.inp
set prod_prefix = step5_GaMD_production


# Running production for 10 nanoseconds
set cnt = 1
set cntmax = 10

while ( ${cnt} <= ${cntmax} )
    # create appropriate input file using ${prod_prefix}.inp as template
    if ( ${cnt} == 1 ) then
        set outputname = "${prod_step}_${cnt}"
        # change only the output name
        sed "s/${prod_prefix}/${outputname}/" ${prod_prefix}.inp > ${prod_step}_run.inp
        sed -i "s/#Pstep/${GaMD_prerun2}/" ${prod_step}_run.inp
    else
        @ cntprev = ${cnt} - 1
        set inputname  = "${prod_step}_${cntprev}"
        set outputname = "${prod_step}_${cnt}"
        # change input and output names from template file
        sed "s/${equi_prefix}/${inputname}/" ${prod_prefix}.inp | \
            sed "s/${prod_prefix}/${outputname}/" > ${prod_step}_run.inp
        sed -i "s/#Pstep/${inputname}/" ${prod_step}_run.inp

    endif
    # run the simulation for 1 nanosecond
    /content/NAMD_3.0alpha13_Linux-x86_64-multicore-CUDA/namd3 ${prod_step}_run.inp > ${outputname}.out
    @ cnt += 1
end
